/*
 ============================================================================
 Name        : TP_1.c
 Author      : Lucia Lopez
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>

int mostrarMenu(int retornoPrimerOperando, int retornoSegundoOperando, float primerOperando, float segundoOperando);
int obtenerNumeroFloat( float* pResultado, char* mensaje, char* mensajeError, int reintentos);
int sumarFloat(float* pResultado, float num1, float num2);
int restarFloat(float* pResultado, float num1, float num2);
int multiplicarFloat(float* pResultado, float num1, float num2);
int dividirFloat(float* pResultado, float num1, float num2);
int determinarEntero(int* pEntero, float numFloat);
int factorizar(int num);


int main(void) {

		setbuf(stdout,NULL);

		char seguir = 's';
	    int flag = 0;
	    float pPrimerOperando;
	    float pSegundoOperando;
	    int retornoPrimerOperando;
	    int retornoSegundoOperando;
	    float pSuma;
	    float pResta;
	    float pMulticacion;
	    float pDivision;
	    int retornoDivision;
	    int pFactorial1;
	    int pFactorial2;
	    int pEntero;


	    do{

	        switch(mostrarMenu(retornoPrimerOperando, retornoSegundoOperando,pPrimerOperando, pSegundoOperando)){

	            case 1:

	                retornoPrimerOperando = obtenerNumeroFloat(&pPrimerOperando, "Ingrese un numero: ", "Error.", 3);

	                break;

	            case 2:

	                retornoSegundoOperando = obtenerNumeroFloat(&pSegundoOperando, "Ingrese un numero: ", "Error.", 3);

	                break;

	            case 3:

	                if(retornoPrimerOperando == 1 && retornoSegundoOperando == 1){

	                    sumarFloat(&pSuma, pPrimerOperando,pSegundoOperando);

	                    restarFloat(&pResta, pPrimerOperando,pSegundoOperando);

	                    multiplicarFloat(&pMulticacion, pPrimerOperando,pSegundoOperando);

	                    retornoDivision = dividirFloat(&pDivision, pPrimerOperando,pSegundoOperando);

						if (determinarEntero(&pEntero, pPrimerOperando) ==0){

						pFactorial1 = factorizar(pEntero);

						} else {

							pFactorial1 = 0;}

						if (determinarEntero(&pEntero, pSegundoOperando) ==0){

						pFactorial2 = factorizar(pEntero);

						}
						else {
							pFactorial2 = 0;}

						flag = 1;

	                    }
	                else {

	                    printf("Para calcular las operaciones es necesario ingresar ambos operandos\n");

	                }

	                break;

	            case 4:

	                if(flag == 1){

	                    printf("a) El resultado de A = %.2f + B = %.2f es: %.2f\n", pPrimerOperando, pSegundoOperando, pSuma);

	                    printf("b) El resultado de A = %.2f - B = %.2f es: %.2f\n", pPrimerOperando, pSegundoOperando, pResta);

	                    if(retornoDivision == 0){

	                    printf("c) El resultado de A = %.2f / B = %.2f es: %.2f\n", pPrimerOperando, pSegundoOperando, pDivision);

	                    } else{

							printf("c) El resultado de A = %.2f / B = %.2f no se pudo calcular\n", pPrimerOperando, pSegundoOperando);

						}

	                    printf("d) El resultado de A = %.2f * B = %.2f es: %.2f\n", pPrimerOperando, pSegundoOperando, pMulticacion);

	                    if (pFactorial1 != 0 && pFactorial2 != 0){

	                    printf("e) El factorial de A = %.2f  es: %d y el factorial de B = %.2f  es: %d\n", pPrimerOperando, pFactorial1, pSegundoOperando, pFactorial2);

	                    } else if (pFactorial1 == 0 && pFactorial2 != 0){

	                    	printf("e) El factorial de A = %.2f no se pudo calcular y el factorial de B = %.2f  es: %d\n", pPrimerOperando, pSegundoOperando, pFactorial2);

	                    	} else {
	                                    if(pFactorial1 != 0 && pFactorial2 == 0){

	                                    	printf("e) El factorial de A = %.2f es: %d y el factorial de B = %.2f no se pudo calcular\n", pPrimerOperando, pFactorial1, pSegundoOperando);
	                                    }
	                                    else{

	                                        printf("e) El factorial de A = %.2f y de B = %.2f no se pudieron calcular\n", pPrimerOperando, pSegundoOperando);
	                                    }
	                            }

	                    flag = 0;}


	                else{

	                    printf("Para informar los resultados, se deben ingresar ambos operandos y calcular las operaciones\n");

	                	}
	                break;

	            case 5:

	                seguir = 'n';

	                printf("¿Quiere cancelar la salida?\n");

	                fflush(stdin);

	                scanf("%c", &seguir);

	                break;

	            default:

	                printf("Opcion invalida \n");

	        }

	        system("pause");

	    }while(seguir == 's');


	return EXIT_SUCCESS;
}




/// \fn int mostrarMenu(int, int, float, float)
/// \brief
/// \param retornoPrimerOperando
/// \param retornoSegundoOperando
/// \param primerOperando
/// \param segundoOperando
/// \return

int mostrarMenu(int retornoPrimerOperando, int retornoSegundoOperando, float primerOperando, float segundoOperando) {

    int opcion;

    system("cls");
    printf("Menu de opciones\n\n");
    printf("1. Ingresar primer operando\n");
    printf("2. Ingresar segundo operando\n");
    printf("3. Calcular todas las operaciones\n");
    printf("4. Informar resultados\n");
    printf("5. Salir\n\n");

    if(retornoPrimerOperando == 1){

        printf("El primer operando ingresado (A) es %.2f\n", primerOperando);

    }

    if(retornoSegundoOperando == 1){

        printf("El segundo operando ingresado (B) es %.2f\n", segundoOperando);

    }

    printf("\nIndique opcion: ");
    fflush(stdin);
    scanf("%d", &opcion);

    return opcion;

}

int obtenerNumeroFloat( float* pResultado, char* mensaje, char* mensajeError, int reintentos)
{
	int retorno = -1;
	float num;
	int resultadoScanf;


		do
		{
			printf("%s", mensaje);
			resultadoScanf = scanf( "%f" ,&num);
			fflush(stdin);

			if(pResultado != NULL && mensaje != NULL && mensajeError != NULL && resultadoScanf == 1)
			{
				* pResultado = num;
				retorno = 1;
				break;
			}
			else
			{
				printf("%s", mensajeError);
				fflush(stdin);
				reintentos--;
			}

		} while(reintentos>=1);

		return retorno;

}

int sumarFloat(float* pResultado, float num1, float num2){

	int retorno = 1;

		if(pResultado != NULL){
			*pResultado = num1 + num2;
			retorno = 0;

		}

	return retorno;
}


int restarFloat(float* pResultado, float num1, float num2){

	int retorno = 1;

		if(pResultado != NULL){
			*pResultado = num1 - num2;
			retorno = 0;

		}

	return retorno;
}


int multiplicarFloat(float* pResultado, float num1, float num2){

	int retorno = 1;

		if(pResultado != NULL){
			 *pResultado = num1 * num2;
			retorno = 0;
			}

		if(*pResultado == -0){
			*pResultado = 0;
		}

	return retorno;
}


int dividirFloat(float* pResultado, float num1, float num2){

	int retorno = 1;

		if(pResultado != NULL && num2 != 0){
			*pResultado = num1 / num2;
			retorno = 0;
			}

		if(*pResultado == -0){
			*pResultado = 0;
			}

	return retorno;
}


int determinarEntero(int* pEntero, float numFloat){
    int retorno = 1;
    int numAEntero;

		numAEntero = numFloat;

		if (numFloat - numAEntero == 0){

			*pEntero = numAEntero;
			retorno = 0;

		}

    return retorno;
}


int factorizar(int num){

    int fact = 0;

		if (num >= 0 && num < 13) {
			fact = 1;
			for(int i = 2; i <= num; i++){
				fact = fact*i;
			}
		}

    return fact;
}

